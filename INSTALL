CONTENTS
---------

1. Windows
2. GNU/Linux, Mac OS X and FreeBSD
3. Other systems, customization and testing


1. Windows
-----------

For Windows there is an installer program available in the crates
homepage  www.octaspire.com/crates/. With it you can install  and
uninstall a binary version of the game easily with just a  couple
of mouse clicks.


2. GNU/Linux, Mac OS X and FreeBSD
-----------------------------------

For GNU/Linux, Mac OS X and FreeBSD there isn't currently an ins-
taller or package files (might come later), so  in these  systems
the game needs to be compiled  from  the source code  using CMake
(cross-platform, open-source build system).  Install it first, if
you don't  already have it.  In  GNU/Linux  and  FreeBSD  it  can
probably be installed with your system's package manager (apt-get,
pacman, pkg_add, Synaptic Package Manager, emerge, ...),  or  you
can get binaries or source code archives  from CMake's  download-
section  from http://www.cmake.org/cmake/resources/software.html.
Note that in  Mac OS X you must have also  Xcode installed  (from
the  "optional installs"  of  the  Mac OS X DVD or from the Apple
Developer Connection).  Then install development  versions of the
latest  stable  versions of  SDL 1.2, SDL_mixer 1.2, libpng, zlib
and Lua 5.1.  Then  use CMake and the provided CMakeListst.txt to
build crates.  Note  that  in-source  builds are not allowed. For
example,  to extract,  build and run the game you could issue the
following commands:

  tar -xzf crates-0.7.3.tar.gz
  mkdir crates-0.7.3-build
  cd crates-0.7.3-build
  cmake ../crates-0.7.3
  make
  ../crates-0.7.3/crates

If you want to run the unit tests in  tests-directory,  you  will
also  need  to  install check, a unit testing framework for C, if
you don't already have it.

Please note that if  you  enable  sounds  and  your  systems  has
PulseAudio,  the SDL(_mixer) + PulseAudio combination might cause
problems at least on some  GNU/Linux-systems.   See  for  example
"the  pulseaudio  hack".  For  example, at the time of writing in
Ubuntu, if your system has SDL with ALSA option (libsdl1.2debian-
alsa)  installed,  sounds  might  be crackling, channels will ebb
away and game will get jammed when you try to  quit  playing.  In
this  case  removing libsdl1.2debian-alsa and installing SDL with
PulseAudio options (libsdl1.2debian-pulseaudio) instead helped.


3. Other systems, customization and testing
--------------------------------------------

Game is currently tested only in Ubuntu GNU/Linux, Arch GNU/Linux,
Windows XP, Mac OS X and FreeBSD. Other versions might come later.
The  code  should  be  quite portable,  because  it is written in
standard C.  The non-portable parts can be found in windows-  and
posix-subdirectories in the src-directory. At least "/proc/%i/exe"
in src/posix/linux/oexedirname.c,   "GetModuleFileName"        in
src/windows/odir.c,    "_NSGetExecutablePath"                  in
src/posix/macosx/oexedirname.c  and    "sysctl"                in
src/posix/freebsd/oexedirname.c might  need  changing  for  other
systems.

The top level directory of crates (source code version)  contains
CMakeLists.txt,  a  CMake  build  configuration  file for all the
supported systems. If you are working with a new system you might
want to add detection of that system and configuration for it  in
the CMakeLists.txt.

The tests-directory of crates (source code version) contains some
unit tests. If you want to run those unit tests, you will need to
install check, a unit testing framework for C, if you  don't  al-
ready have it.
